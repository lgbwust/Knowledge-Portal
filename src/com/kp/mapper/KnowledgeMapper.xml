<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kp.dao.KnowledgeMapper" >
  <resultMap id="BaseResultMap" type="com.kp.domain.Knowledge" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="kid" property="kid" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="cid" property="cid" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.kp.domain.KnowledgeWithBLOBs" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="title" property="title" jdbcType="LONGVARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="extra" property="extra" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <!-- 多表查询实现，用于显示知识点 -->
  <resultMap id="ResultKnowledgeMap" type="com.kp.domain.KnowledgeWithBLOBs" extends="BaseResultMap" >
    <result column="title" property="title" jdbcType="LONGVARCHAR" />
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
    <result column="extra" property="extra" jdbcType="LONGVARCHAR" />
    <collection property="user" ofType="com.kp.domain.User">
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="user_password" property="userPassword" jdbcType="VARCHAR" />
    <result column="user_email" property="userEmail" jdbcType="VARCHAR" />
    </collection>
    <collection property="category" ofType="com.kp.domain.Category">
     <id column="cid" property="cid" jdbcType="INTEGER" />
    <result column="cname" property="cname" jdbcType="VARCHAR" />
    </collection>
  </resultMap>
  
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    kid, user_id, cid, status
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    title, content, extra
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from knowledge
    where kid = #{kid,jdbcType=INTEGER}
  </select>
  
      <!--显示知识点-->
    <select id="listKnowledge" resultMap="ResultKnowledgeMap">
        SELECT
        *
        FROM knowledge K,user U,category C
        WHERE K.user_id = U.user_id AND K.cid = C.cid AND K.status = #{status}
    </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from knowledge
    where kid = #{kid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kp.domain.KnowledgeWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge (kid, user_id, cid, 
      status, title, content, 
      extra)
    values (#{kid,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{cid,jdbcType=INTEGER}, 
      #{status,jdbcType=INTEGER}, #{title,jdbcType=LONGVARCHAR}, #{content,jdbcType=LONGVARCHAR}, 
      #{extra,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.kp.domain.KnowledgeWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into knowledge
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="kid != null" >
        kid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="cid != null" >
        cid,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="extra != null" >
        extra,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="kid != null" >
        #{kid,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="extra != null" >
        #{extra,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kp.domain.KnowledgeWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="cid != null" >
        cid = #{cid,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=LONGVARCHAR},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="extra != null" >
        extra = #{extra,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where kid = #{kid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.kp.domain.KnowledgeWithBLOBs" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge
    set user_id = #{userId,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      title = #{title,jdbcType=LONGVARCHAR},
      content = #{content,jdbcType=LONGVARCHAR},
      extra = #{extra,jdbcType=LONGVARCHAR}
    where kid = #{kid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kp.domain.Knowledge" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update knowledge
    set user_id = #{userId,jdbcType=INTEGER},
      cid = #{cid,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER}
    where kid = #{kid,jdbcType=INTEGER}
  </update>
  
    <!-- 自己添加的部分 -->
  <select id="getAllKnowledge" resultMap="ResultKnowledgeMap">
  SELECT
  kid,user_name,title,content,extra,cname,status
  FROM knowledge k,category c,user u
  WHERE k.user_id=u.user_id AND k.cid=c.cid
  </select>
  
  <!-- 分页使用SQL -->
     <select id="getKnowledgeByPage" resultMap="ResultKnowledgeMap">
        SELECT
        kid,user_name,title,content,extra,cname,status
        FROM knowledge k,category c,user u
        WHERE k.user_id=u.user_id AND k.cid=c.cid
        LIMIT #{0},#{1}
     </select>
  
</mapper>